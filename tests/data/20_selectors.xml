<?xml version="1.0"?>
<selectors>
  <document/>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="id" specified="true" value="some-id"/>
  </selector>
  <selector type="conditional">
    <selector type="element_node" localName="div"/>
    <condition type="class" specified="true" value="some-class"/>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="class" specified="true" value="some-class"/>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="and">
      <condition type="and">
        <condition type="class" specified="true" value="class1"/>
        <condition type="id" specified="true" value="some-id"/>
      </condition>
      <condition type="class" specified="true" value="class2"/>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="and">
      <condition type="and">
        <condition type="and">
          <condition type="and">
            <condition type="and">
              <condition type="and">
                <condition type="and">
                  <condition type="attr" localName="attr" specified="false"/>
                  <condition type="attr" localName="iattr" specified="true" value="ident"/>
                </condition>
                <condition type="attr" localName="sattr" specified="true" value="str"/>
              </condition>
              <condition type="one_of" localName="oneof" specified="false" value="inc"/>
            </condition>
            <condition type="begin_hypen" localName="hypen" specified="false" value="dash"/>
          </condition>
          <condition type="prefix" localName="prefix" specified="false" value="val"/>
        </condition>
        <condition type="suffix" localName="suffix" specified="false" value="val"/>
      </condition>
      <condition type="substr" localName="substr" specified="false" value="val"/>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="and">
      <condition type="and">
        <condition type="and">
          <condition type="and">
            <condition type="and">
              <condition type="and">
                <condition type="attr" namespaceURI="ns" localName="attr" specified="false"/>
                <condition type="attr" namespaceURI="ns" localName="attr" specified="true" value="str"/>
              </condition>
              <condition type="one_of" namespaceURI="ns" localName="oneof" specified="false" value="inc"/>
            </condition>
            <condition type="begin_hypen" namespaceURI="ns" localName="hypen" specified="false" value="dash"/>
          </condition>
          <condition type="prefix" namespaceURI="ns" localName="prefix" specified="false" value="val"/>
        </condition>
        <condition type="suffix" namespaceURI="ns" localName="suffix" specified="false" value="val"/>
      </condition>
      <condition type="substr" namespaceURI="ns" localName="substr" specified="false" value="val"/>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="and">
      <condition type="and">
        <condition type="and">
          <condition type="and">
            <condition type="and">
              <condition type="and">
                <condition type="attr" localName="attr" specified="false"/>
                <condition type="attr" localName="attr" specified="true" value="str"/>
              </condition>
              <condition type="one_of" localName="oneof" specified="false" value="inc"/>
            </condition>
            <condition type="begin_hypen" localName="hypen" specified="false" value="dash"/>
          </condition>
          <condition type="prefix" localName="prefix" specified="false" value="val"/>
        </condition>
        <condition type="suffix" localName="suffix" specified="false" value="val"/>
      </condition>
      <condition type="substr" localName="substr" specified="false" value="val"/>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_class">
      <ident>pseudo-class</ident>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <ident>pseudo-element</ident>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="and">
      <condition type="class" specified="true" value="foo"/>
      <condition type="pseudo_class">
        <ident>bar</ident>
      </condition>
    </condition>
  </selector>
  <selector type="descendant">
    <selector type="descendant">
      <selector type="element_node" localName="a"/>
      <selector type="element_node" localName="b"/>
    </selector>
    <selector type="element_node" localName="c"/>
  </selector>
  <selector type="direct-adjacent">
    <selector type="direct-adjacent">
      <selector type="element_node" localName="a"/>
      <selector type="element_node" localName="b"/>
    </selector>
    <selector type="element_node" localName="c"/>
  </selector>
  <selector type="child">
    <selector type="child">
      <selector type="element_node" localName="a"/>
      <selector type="element_node" localName="b"/>
    </selector>
    <selector type="element_node" localName="c"/>
  </selector>
  <selector type="general-adjacent">
    <selector type="general-adjacent">
      <selector type="element_node" localName="a"/>
      <selector type="element_node" localName="b"/>
    </selector>
    <selector type="element_node" localName="c"/>
  </selector>
  <selector type="descendant">
    <selector type="descendant">
      <selector type="descendant">
        <selector type="any_node"/>
        <selector type="element_node" localName="a"/>
      </selector>
      <selector type="element_node" namespaceURI="ns"/>
    </selector>
    <selector type="element_node" namespaceURI="ns" localName="b"/>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="and">
      <condition type="and">
        <condition type="and">
          <condition type="negative">
            <selector type="conditional">
              <selector type="any_node"/>
              <condition type="id" specified="true" value="foo"/>
            </selector>
          </condition>
          <condition type="negative">
            <selector type="conditional">
              <selector type="any_node"/>
              <condition type="class" specified="true" value="bar"/>
            </selector>
          </condition>
        </condition>
        <condition type="negative">
          <selector type="conditional">
            <selector type="any_node"/>
            <condition type="attr" localName="sattr" specified="true" value="str"/>
          </selector>
        </condition>
      </condition>
      <condition type="negative">
        <selector type="conditional">
          <selector type="any_node"/>
          <condition type="pseudo_class">
            <ident>pseudo-class</ident>
          </condition>
        </selector>
      </condition>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="and">
      <condition type="and">
        <condition type="and">
          <condition type="and">
            <condition type="and">
              <condition type="negative">
                <selector type="any_node"/>
              </condition>
              <condition type="negative">
                <selector type="element_node" localName="a"/>
              </condition>
            </condition>
            <condition type="negative">
              <selector type="element_node" namespaceURI="ns"/>
            </condition>
          </condition>
          <condition type="negative">
            <selector type="element_node" namespaceURI="ns" localName="b"/>
          </condition>
        </condition>
        <condition type="negative">
          <selector type="any_node"/>
        </condition>
      </condition>
      <condition type="negative">
        <selector type="element_node" localName="a"/>
      </condition>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <ident>first-line</ident>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <ident>first-letter</ident>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <ident>before</ident>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <ident>after</ident>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_class">
      <ident>first-child</ident>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_class">
      <ident>last-child</ident>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_class">
      <ident>root</ident>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <func type="generic" name="nth-child">
        <arg>
          <dimen type="n">2</dimen>
        </arg>
        <arg>
          <plus/>
        </arg>
        <arg>
          <int>1</int>
        </arg>
      </func>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <func type="generic" name="nth-child">
        <arg>
          <ident>odd</ident>
        </arg>
      </func>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <func type="generic" name="nth-child">
        <arg>
          <ident>even</ident>
        </arg>
      </func>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <func type="generic" name="nth-child">
        <arg>
          <dimen type="n-1">10</dimen>
        </arg>
      </func>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <func type="generic" name="nth-child">
        <arg>
          <dimen type="n">3</dimen>
        </arg>
        <arg>
          <plus/>
        </arg>
        <arg>
          <int>1</int>
        </arg>
      </func>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <func type="generic" name="nth-child">
        <arg>
          <plus/>
        </arg>
        <arg>
          <dimen type="n">3</dimen>
        </arg>
        <arg>
          <minus/>
        </arg>
        <arg>
          <int>2</int>
        </arg>
      </func>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <func type="generic" name="nth-child">
        <arg>
          <ident>-n</ident>
        </arg>
        <arg>
          <plus/>
        </arg>
        <arg>
          <int>6</int>
        </arg>
      </func>
    </condition>
  </selector>
  <selector type="conditional">
    <selector type="any_node"/>
    <condition type="pseudo_element">
      <func type="generic" name="nth-child">
        <arg>
          <plus/>
        </arg>
        <arg>
          <int>6</int>
        </arg>
      </func>
    </condition>
  </selector>
</selectors>
